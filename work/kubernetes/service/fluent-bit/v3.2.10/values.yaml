global:
  defaultStorageClass: ""
  security:
    allowInsecureImages: true
fullnameOverride: "fluent-bit"
image:
  registry: registry.lingo.local
  repository: bitnami/fluent-bit
  tag: "3.2.10"
  pullPolicy: IfNotPresent
daemonset:
  ## @param daemonset.enabled Use a daemonset instead of a deployment. `replicaCount` will not take effect.
  ##
  enabled: false
  hostPaths:
    logs: /var/log
    containerLogs: /data/service/docker/containers
    machineId: /etc/machine-id
replicaCount: 1
resourcesPreset: "none"
resources: {}
affinity: {}
nodeSelector: {}
# resources:
#   limits:
#     cpu: "1"
#     memory: "1Gi"
#   requests:
#     cpu: "500m"
#     memory: "512Mi"
# ## Allowed values: `soft` or `hard`
# #podAffinityPreset: "soft"  ## 调度到同一节点
podAntiAffinityPreset: "soft"  ## 调度到不同节点
nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/fluent-bit="true"
  type: "soft"
  key: "kubernetes.service/fluent-bit"
  values:
    - "true"
extraEnvVars:
  - name: TZ
    value: Asia/Shanghai
service:
  type: ClusterIP
  ports:
    http: 2020
  nodePorts:
    http: ""
config:
  flush: 1
  logLevel: info
  service: |
    [SERVICE]
        Flush        {{ .Values.config.flush }}
        Daemon       Off
        Log_Level    {{ .Values.config.logLevel }}
        Config_Watch On
        HTTP_Server  On
        HTTP_Listen  0.0.0.0
        HTTP_Port    {{ .Values.containerPorts.http }}
        Parsers_File /opt/bitnami/fluent-bit/conf/parsers.conf
        Parsers_File /opt/bitnami/fluent-bit/conf/custom_parsers.conf
  ## @param config.inputs [string] Defines the source from where Fluent Bit can collect data
  ## https://docs.fluentbit.io/manual/pipeline/inputs
  ##
  inputs: |
    [INPUT]
        Name cpu
  ## @param config.filters [string] Set of plugins that can be used to filter, modify, or enrich log data that is processed by Fluent Bit.
  ## https://docs.fluentbit.io/manual/pipeline/filters
  ## Example:
  ## filters: |
  ##   [FILTER]
  ##       Name kubernetes
  ##       Match kube.*
  ##       Merge_Log On
  ##       Keep_Log Off
  ##       K8S-Logging.Parser On
  ##       K8S-Logging.Exclude On
  ##
  filters: ""
  outputs: |
    [OUTPUT]
        Name  stdout
        Match *
  upstream: {}
  customParsers: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
  extraFiles: {}
