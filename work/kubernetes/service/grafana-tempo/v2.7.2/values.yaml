global:
  defaultStorageClass: ""
  security:
    allowInsecureImages: true
fullnameOverride: "grafana-tempo"
tempo:
  image:
    registry: registry.lingo.local
    repository: bitnami/grafana-tempo
    tag: "2.7.2"
    pullPolicy: IfNotPresent
  memBallastSizeMbs: 1024
  ## @param tempo.dataDir Tempo components data directory
  ##
  dataDir: /bitnami/grafana-tempo/data
  ## Tempo trace parameters
  ##
  traces:
    jaeger:
      ## @param tempo.traces.jaeger.grpc Enable Tempo to ingest Jaeger GRPC traces
      ##
      grpc: true
      ## @param tempo.traces.jaeger.thriftBinary Enable Tempo to ingest Jaeger Thrift Binary traces
      ##
      thriftBinary: false
      ## @param tempo.traces.jaeger.thriftCompact Enable Tempo to ingest Jaeger Thrift Compact traces
      ##
      thriftCompact: false
      ## @param tempo.traces.jaeger.thriftHttp Enable Tempo to ingest Jaeger Thrift HTTP traces
      ##
      thriftHttp: true
    otlp:
      ## @param tempo.traces.otlp.http Enable Tempo to ingest Open Telemetry HTTP traces
      ##
      http: false
      ## @param tempo.traces.otlp.grpc Enable Tempo to ingest Open Telemetry GRPC traces
      ##
      grpc: false
    ## @param tempo.traces.opencensus Enable Tempo to ingest Open Census traces
    ##
    opencensus: false
    ## @param tempo.traces.zipkin Enable Tempo to ingest Zipkin traces
    ##
    zipkin: false
  ## @param tempo.configuration [string] Tempo components configuration
  ##
  configuration: |
    multitenancy_enabled: false
    cache:
      caches:
        - memcached:
            host: {{ include "grafana-tempo.memcached.url" . }}
            service: memcache
            timeout: 500ms
            consistent_hash: true
          roles:
            - bloom
            - trace-id-index
    compactor:
      compaction:
        block_retention: 48h
      ring:
        kvstore:
          store: memberlist
    distributor:
      ring:
        kvstore:
          store: memberlist
      receivers:
        {{- if  or (.Values.tempo.traces.jaeger.thriftCompact) (.Values.tempo.traces.jaeger.thriftBinary) (.Values.tempo.traces.jaeger.thriftHttp) (.Values.tempo.traces.jaeger.grpc) }}
        jaeger:
          protocols:
            {{- if .Values.tempo.traces.jaeger.thriftCompact }}
            thrift_compact:
              endpoint: 0.0.0.0:6831
            {{- end }}
            {{- if .Values.tempo.traces.jaeger.thriftBinary }}
            thrift_binary:
              endpoint: 0.0.0.0:6832
            {{- end }}
            {{- if .Values.tempo.traces.jaeger.thriftHttp }}
            thrift_http:
              endpoint: 0.0.0.0:14268
            {{- end }}
            {{- if .Values.tempo.traces.jaeger.grpc }}
            grpc:
              endpoint: 0.0.0.0:14250
            {{- end }}
        {{- end }}
        {{- if .Values.tempo.traces.zipkin }}
        zipkin:
          endpoint: 0.0.0.0:9411
        {{- end }}
        {{- if or (.Values.tempo.traces.otlp.http) (.Values.tempo.traces.otlp.grpc) }}
        otlp:
          protocols:
            {{- if .Values.tempo.traces.otlp.http }}
            http:
              endpoint: 0.0.0.0:4318
            {{- end }}
            {{- if .Values.tempo.traces.otlp.grpc }}
            grpc:
              endpoint: 0.0.0.0:4317
            {{- end }}
        {{- end }}
        {{- if .Values.tempo.traces.opencensus }}
        opencensus:
          endpoint: 0.0.0.0:55678
        {{- end }}
    querier:
      frontend_worker:
        frontend_address: {{ include "grafana-tempo.query-frontend.fullname" . }}-headless:{{ .Values.queryFrontend.service.ports.grpc }}
    ingester:
      lifecycler:
        ring:
          replication_factor: 1
          kvstore:
            store: memberlist
        tokens_file_path: {{ .Values.tempo.dataDir }}/tokens.json
    metrics_generator:
      ring:
        kvstore:
          store: memberlist
      storage:
        path: {{ .Values.tempo.dataDir }}/wal
        remote_write: {{ include "common.tplvalues.render" (dict "value" .Values.metricsGenerator.remoteWrite "context" $) | nindent 6 }}
    memberlist:
      bind_port: {{ .Values.tempo.containerPorts.gossipRing }}
      abort_if_cluster_join_fails: false
      join_members:
        - {{ include "grafana-tempo.gossip-ring.fullname" . }}:{{ .Values.tempo.gossipRing.service.ports.http }}
    overrides:
      per_tenant_override_config: /bitnami/grafana-tempo/conf/overrides.yaml
    server:
      http_listen_port: {{ .Values.tempo.containerPorts.web }}
      grpc_listen_port: {{ .Values.tempo.containerPorts.grpc }}
    storage:
      trace:
        backend: local
        blocklist_poll: 5m
        local:
          path: {{ .Values.tempo.dataDir }}/traces
        wal:
          path: {{ .Values.tempo.dataDir }}/wal

  existingConfigmap: ""
  overridesConfiguration: |
    overrides: {}

compactor:
  enabled: true
  replicaCount: 1
  resourcesPreset: "none"
  resources: {}
  affinity: {}
  nodeSelector: {}
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: "1Gi"
  #   requests:
  #     cpu: "500m"
  #     memory: "512Mi"
  # ## Allowed values: `soft` or `hard`
  # #podAffinityPreset: "soft"  ## 调度到同一节点
  podAntiAffinityPreset: "soft"  ## 调度到不同节点
  nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/grafana-tempo="true"
    type: "soft"
    key: "kubernetes.service/grafana-tempo"
    values:
      - "true"
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  persistence:
    enabled: true
    size: 10Gi
  service:
    type: ClusterIP
    ports:
      http: 3200
      grpc: 9095
    nodePorts:
      http: ""
distributor:
  replicaCount: 1
  resourcesPreset: "none"
  resources: {}
  affinity: {}
  nodeSelector: {}
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: "1Gi"
  #   requests:
  #     cpu: "500m"
  #     memory: "512Mi"
  # ## Allowed values: `soft` or `hard`
  # #podAffinityPreset: "soft"  ## 调度到同一节点
  podAntiAffinityPreset: "soft"  ## 调度到不同节点
  nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/grafana-tempo="true"
    type: "soft"
    key: "kubernetes.service/grafana-tempo"
    values:
      - "true"
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  service:
    type: ClusterIP
    ports:
      http: 3200
      grpc: 9095
    nodePorts:
      http: ""
      grpc: ""
metricsGenerator:
  replicaCount: 1
  resourcesPreset: "none"
  resources: {}
  affinity: {}
  nodeSelector: {}
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: "1Gi"
  #   requests:
  #     cpu: "500m"
  #     memory: "512Mi"
  # ## Allowed values: `soft` or `hard`
  # #podAffinityPreset: "soft"  ## 调度到同一节点
  podAntiAffinityPreset: "soft"  ## 调度到不同节点
  nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/grafana-tempo="true"
    type: "soft"
    key: "kubernetes.service/grafana-tempo"
    values:
      - "true"
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  persistence:
    enabled: false
    size: 10Gi
  service:
    type: ClusterIP
    ports:
      http: 3200
      grpc: 9095
    nodePorts:
      http: ""
      grpc: ""
ingester:
  replicaCount: 1
  resourcesPreset: "none"
  resources: {}
  affinity: {}
  nodeSelector: {}
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: "1Gi"
  #   requests:
  #     cpu: "500m"
  #     memory: "512Mi"
  # ## Allowed values: `soft` or `hard`
  # #podAffinityPreset: "soft"  ## 调度到同一节点
  podAntiAffinityPreset: "soft"  ## 调度到不同节点
  nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/grafana-tempo="true"
    type: "soft"
    key: "kubernetes.service/grafana-tempo"
    values:
      - "true"
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  persistence:
    enabled: true
    size: 10Gi
  service:
    type: ClusterIP
    ports:
      http: 3200
      grpc: 9095
    nodePorts:
      http: ""
      grpc: ""
querier:
  replicaCount: 1
  resourcesPreset: "none"
  resources: {}
  affinity: {}
  nodeSelector: {}
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: "1Gi"
  #   requests:
  #     cpu: "500m"
  #     memory: "512Mi"
  # ## Allowed values: `soft` or `hard`
  # #podAffinityPreset: "soft"  ## 调度到同一节点
  podAntiAffinityPreset: "soft"  ## 调度到不同节点
  nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/grafana-tempo="true"
    type: "soft"
    key: "kubernetes.service/grafana-tempo"
    values:
      - "true"
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  service:
    type: ClusterIP
    ports:
      http: 3200
      grpc: 9095
    nodePorts:
      http: ""
      grpc: ""
queryFrontend:
  replicaCount: 1
  resourcesPreset: "none"
  resources: {}
  affinity: {}
  nodeSelector: {}
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: "1Gi"
  #   requests:
  #     cpu: "500m"
  #     memory: "512Mi"
  # ## Allowed values: `soft` or `hard`
  # #podAffinityPreset: "soft"  ## 调度到同一节点
  podAntiAffinityPreset: "soft"  ## 调度到不同节点
  nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/grafana-tempo="true"
    type: "soft"
    key: "kubernetes.service/grafana-tempo"
    values:
      - "true"
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  query:
    enabled: false
    image:
      registry: registry.lingo.local
      repository: bitnami/grafana-tempo-query
      tag: "2.7.2"
      pullPolicy: IfNotPresent
    configuration: |
      backend: 127.0.0.1:{{ .Values.tempo.containerPorts.web }}
    resourcesPreset: "none"
    resources: {}
    affinity: {}
    nodeSelector: {}
    # resources:
    #   limits:
    #     cpu: "1"
    #     memory: "1Gi"
    #   requests:
    #     cpu: "500m"
    #     memory: "512Mi"
    # ## Allowed values: `soft` or `hard`
    # #podAffinityPreset: "soft"  ## 调度到同一节点
    podAntiAffinityPreset: "soft"  ## 调度到不同节点
    nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/grafana-tempo="true"
      type: "soft"
      key: "kubernetes.service/grafana-tempo"
      values:
        - "true"
    extraEnvVars:
      - name: TZ
        value: Asia/Shanghai
  service:
    type: NodePort
    ports:
      http: 3200
      grpc: 9095
    nodePorts:
      http: ""
      grpc: ""
vulture:
  enabled: true
  image:
    registry: registry.lingo.local
    repository: bitnami/grafana-tempo-vulture
    tag: "2.7.2"
    pullPolicy: IfNotPresent
  replicaCount: 1
  resourcesPreset: "none"
  resources: {}
  affinity: {}
  nodeSelector: {}
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: "1Gi"
  #   requests:
  #     cpu: "500m"
  #     memory: "512Mi"
  # ## Allowed values: `soft` or `hard`
  # #podAffinityPreset: "soft"  ## 调度到同一节点
  podAntiAffinityPreset: "soft"  ## 调度到不同节点
  nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local kubernetes.service/grafana-tempo="true"
    type: "soft"
    key: "kubernetes.service/grafana-tempo"
    values:
      - "true"
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  service:
    type: ClusterIP
    ports:
      http: 3200
    nodePorts:
      http: ""
externalMemcached:
  host: "memcached.kongyu"
  port: 11211
memcached:
  enabled: false
