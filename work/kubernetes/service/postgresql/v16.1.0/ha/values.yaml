global:
  storageClass: "openebs-hostpath"
fullnameOverride: "postgresql"
postgresql:
  image:
    registry: registry.lingo.local
    repository: service/postgresql-repmgr
    tag: 16.1.0
    pullPolicy: IfNotPresent
    debug: false
  replicaCount: 3
  containerPorts:
    postgresql: 5432
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  username: postgres
  password: "Admin@123"
  database: "postgres"
  repmgrUsername: repmgr
  repmgrPassword: "Admin@123"
  repmgrDatabase: repmgr
  maxConnections: "10240"
  extendedConf: |-
    max_connections = 10240
    shared_buffers = 4GB
    work_mem = 64MB
    max_parallel_workers_per_gather = 4
    max_parallel_maintenance_workers = 2
    max_parallel_workers = 8
    wal_level = 'logical'
    log_timezone = 'Asia/Shanghai'
    timezone = 'Asia/Shanghai'

  resources:
    limits: {}
    requests: {}
  # resources:
  #   limits:
  #     cpu: "1"
  #     memory: "1Gi"
  #   requests:
  #     cpu: "500m"
  #     memory: "512Mi"
  # ## Allowed values: `soft` or `hard`
  # #podAffinityPreset: "soft"  ## 调度到同一节点
  # podAntiAffinityPreset: "hard"  ## 调度到不同节点
  # nodeAffinityPreset:  ## 调度到包含指定标签的节点，例如创建节点标签：kubectl label node server02.lingo.local ateng.kafka.controller=node
  #   type: "hard"
  #   key: "ateng.kafka.controller"
  #   values:
  #     - node
  # affinity: {}
  # nodeSelector: {}
  # terminationGracePeriodSeconds: "30"
pgpool:
  image:
    registry: registry.lingo.local
    repository: service/pgpool
    tag: 4.4.5
    debug: true
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
  resources:
    limits: {}
    requests: {}
  affinity: {}
  nodeSelector: {}
  replicaCount: 1
  containerPorts:
    postgresql: 5432
  adminUsername: admin
  adminPassword: "Admin@123"
volumePermissions:
  enabled: true
  image:
    registry: registry.lingo.local
    repository: service/os-shell
    tag: 11
    pullPolicy: IfNotPresent
persistence:
  enabled: true
  size: 100Gi
service:
  type: NodePort
  ports:
    postgresql: 5432
  portName: postgresql
  nodePorts:
    postgresql: ""

